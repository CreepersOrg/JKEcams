//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="Iliku")]
public interface Iliku
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/DoWork", ReplyAction="http://tempuri.org/Iliku/DoWorkResponse")]
    void DoWork();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/DoWork", ReplyAction="http://tempuri.org/Iliku/DoWorkResponse")]
    System.Threading.Tasks.Task DoWorkAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/Connect", ReplyAction="http://tempuri.org/Iliku/ConnectResponse")]
    string Connect();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/Connect", ReplyAction="http://tempuri.org/Iliku/ConnectResponse")]
    System.Threading.Tasks.Task<string> ConnectAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/UpLoadRID", ReplyAction="http://tempuri.org/Iliku/UpLoadRIDResponse")]
    string UpLoadRID(string crid);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/UpLoadRID", ReplyAction="http://tempuri.org/Iliku/UpLoadRIDResponse")]
    System.Threading.Tasks.Task<string> UpLoadRIDAsync(string crid);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/KillRID", ReplyAction="http://tempuri.org/Iliku/KillRIDResponse")]
    string KillRID();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/KillRID", ReplyAction="http://tempuri.org/Iliku/KillRIDResponse")]
    System.Threading.Tasks.Task<string> KillRIDAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/returnRID", ReplyAction="http://tempuri.org/Iliku/returnRIDResponse")]
    string returnRID(string rid);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/returnRID", ReplyAction="http://tempuri.org/Iliku/returnRIDResponse")]
    System.Threading.Tasks.Task<string> returnRIDAsync(string rid);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/GetRIDStatus", ReplyAction="http://tempuri.org/Iliku/GetRIDStatusResponse")]
    string GetRIDStatus(string crid);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/GetRIDStatus", ReplyAction="http://tempuri.org/Iliku/GetRIDStatusResponse")]
    System.Threading.Tasks.Task<string> GetRIDStatusAsync(string crid);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/getSNByRID", ReplyAction="http://tempuri.org/Iliku/getSNByRIDResponse")]
    string getSNByRID(string crid);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/getSNByRID", ReplyAction="http://tempuri.org/Iliku/getSNByRIDResponse")]
    System.Threading.Tasks.Task<string> getSNByRIDAsync(string crid);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/UpLoadHWA", ReplyAction="http://tempuri.org/Iliku/UpLoadHWAResponse")]
    string UpLoadHWA(string rfid, string hw, int type);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/UpLoadHWA", ReplyAction="http://tempuri.org/Iliku/UpLoadHWAResponse")]
    System.Threading.Tasks.Task<string> UpLoadHWAAsync(string rfid, string hw, int type);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/UpLoadHWB", ReplyAction="http://tempuri.org/Iliku/UpLoadHWBResponse")]
    string UpLoadHWB(string rfid, string hw, int type);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/UpLoadHWB", ReplyAction="http://tempuri.org/Iliku/UpLoadHWBResponse")]
    System.Threading.Tasks.Task<string> UpLoadHWBAsync(string rfid, string hw, int type);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/UpLoadTestDataA", ReplyAction="http://tempuri.org/Iliku/UpLoadTestDataAResponse")]
    string UpLoadTestDataA(string str);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/UpLoadTestDataA", ReplyAction="http://tempuri.org/Iliku/UpLoadTestDataAResponse")]
    System.Threading.Tasks.Task<string> UpLoadTestDataAAsync(string str);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/UpLoadTestDataB", ReplyAction="http://tempuri.org/Iliku/UpLoadTestDataBResponse")]
    string UpLoadTestDataB(string str);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/UpLoadTestDataB", ReplyAction="http://tempuri.org/Iliku/UpLoadTestDataBResponse")]
    System.Threading.Tasks.Task<string> UpLoadTestDataBAsync(string str);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/ScanBind10", ReplyAction="http://tempuri.org/Iliku/ScanBind10Response")]
    string ScanBind10(string str);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/ScanBind10", ReplyAction="http://tempuri.org/Iliku/ScanBind10Response")]
    System.Threading.Tasks.Task<string> ScanBind10Async(string str);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/ScanBind20", ReplyAction="http://tempuri.org/Iliku/ScanBind20Response")]
    string ScanBind20(string sn);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iliku/ScanBind20", ReplyAction="http://tempuri.org/Iliku/ScanBind20Response")]
    System.Threading.Tasks.Task<string> ScanBind20Async(string sn);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IlikuChannel : Iliku, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class IlikuClient : System.ServiceModel.ClientBase<Iliku>, Iliku
{
    
    public IlikuClient()
    {
    }
    
    public IlikuClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public IlikuClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public IlikuClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public IlikuClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public void DoWork()
    {
        base.Channel.DoWork();
    }
    
    public System.Threading.Tasks.Task DoWorkAsync()
    {
        return base.Channel.DoWorkAsync();
    }
    
    public string Connect()
    {
        return base.Channel.Connect();
    }
    
    public System.Threading.Tasks.Task<string> ConnectAsync()
    {
        return base.Channel.ConnectAsync();
    }
    
    public string UpLoadRID(string crid)
    {
        return base.Channel.UpLoadRID(crid);
    }
    
    public System.Threading.Tasks.Task<string> UpLoadRIDAsync(string crid)
    {
        return base.Channel.UpLoadRIDAsync(crid);
    }
    
    public string KillRID()
    {
        return base.Channel.KillRID();
    }
    
    public System.Threading.Tasks.Task<string> KillRIDAsync()
    {
        return base.Channel.KillRIDAsync();
    }
    
    public string returnRID(string rid)
    {
        return base.Channel.returnRID(rid);
    }
    
    public System.Threading.Tasks.Task<string> returnRIDAsync(string rid)
    {
        return base.Channel.returnRIDAsync(rid);
    }
    
    public string GetRIDStatus(string crid)
    {
        return base.Channel.GetRIDStatus(crid);
    }
    
    public System.Threading.Tasks.Task<string> GetRIDStatusAsync(string crid)
    {
        return base.Channel.GetRIDStatusAsync(crid);
    }
    
    public string getSNByRID(string crid)
    {
        return base.Channel.getSNByRID(crid);
    }
    
    public System.Threading.Tasks.Task<string> getSNByRIDAsync(string crid)
    {
        return base.Channel.getSNByRIDAsync(crid);
    }
    
    public string UpLoadHWA(string rfid, string hw, int type)
    {
        return base.Channel.UpLoadHWA(rfid, hw, type);
    }
    
    public System.Threading.Tasks.Task<string> UpLoadHWAAsync(string rfid, string hw, int type)
    {
        return base.Channel.UpLoadHWAAsync(rfid, hw, type);
    }
    
    public string UpLoadHWB(string rfid, string hw, int type)
    {
        return base.Channel.UpLoadHWB(rfid, hw, type);
    }
    
    public System.Threading.Tasks.Task<string> UpLoadHWBAsync(string rfid, string hw, int type)
    {
        return base.Channel.UpLoadHWBAsync(rfid, hw, type);
    }
    
    public string UpLoadTestDataA(string str)
    {
        return base.Channel.UpLoadTestDataA(str);
    }
    
    public System.Threading.Tasks.Task<string> UpLoadTestDataAAsync(string str)
    {
        return base.Channel.UpLoadTestDataAAsync(str);
    }
    
    public string UpLoadTestDataB(string str)
    {
        return base.Channel.UpLoadTestDataB(str);
    }
    
    public System.Threading.Tasks.Task<string> UpLoadTestDataBAsync(string str)
    {
        return base.Channel.UpLoadTestDataBAsync(str);
    }
    
    public string ScanBind10(string str)
    {
        return base.Channel.ScanBind10(str);
    }
    
    public System.Threading.Tasks.Task<string> ScanBind10Async(string str)
    {
        return base.Channel.ScanBind10Async(str);
    }
    
    public string ScanBind20(string sn)
    {
        return base.Channel.ScanBind20(sn);
    }
    
    public System.Threading.Tasks.Task<string> ScanBind20Async(string sn)
    {
        return base.Channel.ScanBind20Async(sn);
    }
}
